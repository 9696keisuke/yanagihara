{"ast":null,"code":"var _jsxFileName = \"/Users/kurodakeisuke/Documents/work/src/react/type/src/components/common/Calender.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calender = props => {\n  _s();\n\n  useEffect(() => {\n    console.log(props.startDate);\n  }, [props.startDate]);\n  useEffect(() => {\n    props.startDate(new Date().getDay());\n    console.log(\"useEffect\");\n  }, []);\n  const clickDate = useCallback(date => {\n    props.setStartDay(date);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TitleArea, {\n    children: /*#__PURE__*/_jsxDEV(DateArea, {\n      children: /*#__PURE__*/_jsxDEV(Date, {\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calender, \"8zhB2H8vpZiO609Y89z1CcmqdoQ=\");\n\n_c = Calender;\nconst TitleArea = styled.div`\n  display: flex;\n`;\n_c2 = TitleArea;\nconst DateArea = styled.div`\n  display: flex;\n`;\n_c3 = DateArea;\nconst Date = styled.div`\n  display: flex;\n`;\n_c4 = Date;\nexport default Calender; // const Calender: React.FC<CalenderProps> = (props) => {\n//   const handleDateClick = useCallback((arg: DateClickArg) => {\n//     props.setStartDay(arg.dateStr);\n//   }, []);\n//   useEffect(() => {\n//     console.log(props.startDate);\n//   }, [props.startDate]);\n//   return (\n//     <FullCalendar\n//       plugins={[dayGridPlugin, interactionPlugin]}\n//       initialView=\"dayGridMonth\"\n//       locales={allLocales}\n//       locale=\"ja\"\n//       dateClick={handleDateClick}\n//       dayCellContent={function (e) {\n//         e.dayNumberText = e.dayNumberText.replace(\"日\", \"\");\n//       }}\n//       headerToolbar={{\n//         start: \"prev,next,today\",\n//         center: \"title\",\n//         end: \"prev,next\",\n//       }}\n//     />\n//   );\n// };\n// export type CalenderProps = {\n//   startDate: string;\n//   setStartDay: (startdate: string) => void;\n// };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Calender\");\n$RefreshReg$(_c2, \"TitleArea\");\n$RefreshReg$(_c3, \"DateArea\");\n$RefreshReg$(_c4, \"Date\");","map":{"version":3,"sources":["/Users/kurodakeisuke/Documents/work/src/react/type/src/components/common/Calender.tsx"],"names":["React","useCallback","useEffect","styled","Calender","props","console","log","startDate","Date","getDay","clickDate","date","setStartDay","handleChange","TitleArea","div","DateArea"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAAwD,OAAxD;AACA,OAAO,4CAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,QAAiC,GAAIC,KAAD,IAAW;AAAA;;AACnDH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAlB;AACD,GAFQ,EAEN,CAACH,KAAK,CAACG,SAAP,CAFM,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CAACG,SAAN,CAAgB,IAAIC,IAAJ,GAAWC,MAAX,EAAhB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMI,SAAS,GAAGV,WAAW,CAAEW,IAAD,IAAU;AACtCP,IAAAA,KAAK,CAACQ,WAAN,CAAkBD,IAAlB;AACD,GAF4B,EAE1B,EAF0B,CAA7B;AAIA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,QAAD;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAEJ,SAAtB;AAAiC,UAAA,QAAQ,EAAEM;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAvBD;;GAAMV,Q;;KAAAA,Q;AA8BN,MAAMW,SAAS,GAAGZ,MAAM,CAACa,GAAI;AAC7B;AACA,CAFA;MAAMD,S;AAGN,MAAME,QAAQ,GAAGd,MAAM,CAACa,GAAI;AAC5B;AACA,CAFA;MAAMC,Q;AAGN,MAAMR,IAAI,GAAGN,MAAM,CAACa,GAAI;AACxB;AACA,CAFA;MAAMP,I;AAIN,eAAeL,QAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport styled from \"styled-components\";\n\nconst Calender: React.FC<CalenderProps> = (props) => {\n  useEffect(() => {\n    console.log(props.startDate);\n  }, [props.startDate]);\n\n  useEffect(() => {\n    props.startDate(new Date().getDay());\n    console.log(\"useEffect\");\n  }, []);\n\n  const clickDate = useCallback((date) => {\n    props.setStartDay(date);\n  }, []);\n\n  return (\n    <TitleArea>\n      <DateArea>\n        <Date>\n          <DatePicker selected={startDate} onChange={handleChange} />\n        </Date>\n      </DateArea>\n    </TitleArea>\n  );\n};\n\nexport type CalenderProps = {\n  startDate: string;\n  setStartDay: (startdate: string) => void;\n};\n\nconst TitleArea = styled.div`\n  display: flex;\n`;\nconst DateArea = styled.div`\n  display: flex;\n`;\nconst Date = styled.div`\n  display: flex;\n`;\n\nexport default Calender;\n\n// const Calender: React.FC<CalenderProps> = (props) => {\n//   const handleDateClick = useCallback((arg: DateClickArg) => {\n//     props.setStartDay(arg.dateStr);\n//   }, []);\n\n//   useEffect(() => {\n//     console.log(props.startDate);\n//   }, [props.startDate]);\n\n//   return (\n//     <FullCalendar\n//       plugins={[dayGridPlugin, interactionPlugin]}\n//       initialView=\"dayGridMonth\"\n//       locales={allLocales}\n//       locale=\"ja\"\n//       dateClick={handleDateClick}\n//       dayCellContent={function (e) {\n//         e.dayNumberText = e.dayNumberText.replace(\"日\", \"\");\n//       }}\n//       headerToolbar={{\n//         start: \"prev,next,today\",\n//         center: \"title\",\n//         end: \"prev,next\",\n//       }}\n//     />\n//   );\n// };\n\n// export type CalenderProps = {\n//   startDate: string;\n//   setStartDay: (startdate: string) => void;\n// };\n"]},"metadata":{},"sourceType":"module"}