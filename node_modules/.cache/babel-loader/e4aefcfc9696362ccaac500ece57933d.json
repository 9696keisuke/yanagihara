{"ast":null,"code":"var _jsxFileName = \"/Users/kurodakeisuke/Documents/work/src/react/type/src/components/common/Calender.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calender = props => {\n  _s();\n\n  const initialDate = new Date();\n  const [startDate, setStartDate] = useState(toUtcIso8601str(moment()));\n\n  const parseAsMoment = dateTimeStr => {\n    return moment.utc(dateTimeStr, \"YYYY-MM-DDTHH:mm:00Z\", \"ja\").utcOffset(9);\n  };\n\n  const toUtcIso8601str = momentInstance => {\n    return momentInstance.clone().utc().format(\"YYYY-MM-DDTHH:mm:00Z\");\n  };\n\n  const handleChange = selectedDate => {\n    setStartDate(toUtcIso8601str(moment(selectedDate)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: moment(startDate).toDate(),\n      onChange: handleChange,\n      locale: \"ja\",\n      customInput: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: parseAsMoment(startDate).format(\"YYYY/MM/DD\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calender, \"hJYQ2DuUHrYGJNeEAND502FYvUg=\");\n\n_c = Calender;\nexport default Calender;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"sources":["/Users/kurodakeisuke/Documents/work/src/react/type/src/components/common/Calender.tsx"],"names":["useState","DatePicker","Calender","props","initialDate","Date","startDate","setStartDate","toUtcIso8601str","moment","parseAsMoment","dateTimeStr","utc","utcOffset","momentInstance","clone","format","handleChange","selectedDate","toDate"],"mappings":";;;AAAA,SAAsBA,QAAtB,QAAsC,OAAtC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;;;AAEA,MAAMC,QAAiC,GAAIC,KAAD,IAAW;AAAA;;AACnD,QAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAACQ,eAAe,CAACC,MAAM,EAAP,CAAhB,CAA1C;;AACA,QAAMC,aAAa,GAAIC,WAAD,IAAiB;AACrC,WAAOF,MAAM,CAACG,GAAP,CAAWD,WAAX,EAAwB,sBAAxB,EAAgD,IAAhD,EAAsDE,SAAtD,CAAgE,CAAhE,CAAP;AACD,GAFD;;AAIA,QAAML,eAAe,GAAIM,cAAD,IAAoB;AAC1C,WAAOA,cAAc,CAACC,KAAf,GAAuBH,GAAvB,GAA6BI,MAA7B,CAAoC,sBAApC,CAAP;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAIC,YAAD,IAAkB;AACrCX,IAAAA,YAAY,CAACC,eAAe,CAACC,MAAM,CAACS,YAAD,CAAP,CAAhB,CAAZ;AACD,GAFD;;AAGA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAET,MAAM,CAACH,SAAD,CAAN,CAAkBa,MAAlB,EADZ;AAEE,MAAA,QAAQ,EAAEF,YAFZ;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,WAAW,eACT;AAAA,kBAASP,aAAa,CAACJ,SAAD,CAAb,CAAyBU,MAAzB,CAAgC,YAAhC;AAAT;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAzBD;;GAAMd,Q;;KAAAA,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import { useCallback, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst Calender: React.FC<CalenderProps> = (props) => {\n  const initialDate = new Date();\n  const [startDate, setStartDate] = useState(toUtcIso8601str(moment()));\n  const parseAsMoment = (dateTimeStr) => {\n    return moment.utc(dateTimeStr, \"YYYY-MM-DDTHH:mm:00Z\", \"ja\").utcOffset(9);\n  };\n\n  const toUtcIso8601str = (momentInstance) => {\n    return momentInstance.clone().utc().format(\"YYYY-MM-DDTHH:mm:00Z\");\n  };\n  const handleChange = (selectedDate) => {\n    setStartDate(toUtcIso8601str(moment(selectedDate)));\n  };\n  return (\n    <React.Fragment>\n      <DatePicker\n        selected={moment(startDate).toDate()}\n        onChange={handleChange}\n        locale=\"ja\"\n        customInput={\n          <button>{parseAsMoment(startDate).format(\"YYYY/MM/DD\")}</button>\n        }\n      />\n    </React.Fragment>\n  );\n};\nexport type CalenderProps = {};\n\nexport default Calender;\n"]},"metadata":{},"sourceType":"module"}