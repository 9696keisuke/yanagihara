{"ast":null,"code":"var _jsxFileName = \"/Users/kurodakeisuke/Documents/work/src/react/type/src/components/commons/Calender.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale } from \"react-datepicker\";\nimport ja from \"date-fns/locale/ja\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale(\"ja\", ja);\n\nconst Calender = props => {\n  _s();\n\n  const [startDate, setStartDate] = useState(new Date());\n  const [data, setData] = useState(\"sss\");\n\n  const handleChange = date => {\n    setStartDate(date);\n  };\n\n  const data1 = {\n    a: \"aaaa\",\n    b: \"bbbb\"\n  };\n  const idols = {\n    a: \"aaaa\",\n    b: \"bbbb\"\n  };\n  Object.keys(idols).map(key => {\n    const data = idols[key]; // ðŸ‘ŒðŸ‘ŒðŸ‘Œ\n\n    console.log(data);\n  });\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: startDate,\n      onChange: handleChange,\n      locale: \"ja\",\n      dateFormat: \"yyyy/MM/dd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: \"dddddd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calender, \"Y8IYYtMnFT6x3fjdyYLfNVC9VuQ=\");\n\n_c = Calender;\nconst Text = styled.div``;\n_c2 = Text;\nexport default Calender;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Calender\");\n$RefreshReg$(_c2, \"Text\");","map":{"version":3,"sources":["/Users/kurodakeisuke/Documents/work/src/react/type/src/components/commons/Calender.tsx"],"names":["React","useState","DatePicker","registerLocale","ja","styled","Calender","props","startDate","setStartDate","Date","data","setData","handleChange","date","data1","a","b","idols","Object","keys","map","key","console","log","Text","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAO,4CAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEAF,cAAc,CAAC,IAAD,EAAOC,EAAP,CAAd;;AAEA,MAAME,QAAiC,GAAIC,KAAD,IAAW;AAAA;;AACnD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAIS,IAAJ,EAAD,CAA1C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMY,YAAY,GAAIC,IAAD,IAAgB;AACnCL,IAAAA,YAAY,CAACK,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMC,KAAK,GAAG;AACZC,IAAAA,CAAC,EAAE,MADS;AAEZC,IAAAA,CAAC,EAAE;AAFS,GAAd;AA+BA,QAAMC,KAAe,GAAG;AACtBF,IAAAA,CAAC,EAAE,MADmB;AAEtBC,IAAAA,CAAC,EAAE;AAFmB,GAAxB;AAKCE,EAAAA,MAAM,CAACC,IAAP,CAAYF,KAAZ,CAAD,CAAyCG,GAAzC,CAA8CC,GAAD,IAAS;AACpD,UAAMX,IAAI,GAAGO,KAAK,CAACI,GAAD,CAAlB,CADoD,CAC3B;;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACD,GAHD;AAKAY,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAEH,SADZ;AAEE,MAAA,QAAQ,EAAEK,YAFZ;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,UAAU,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA7DD;;GAAMP,Q;;KAAAA,Q;AAsEN,MAAMmB,IAAI,GAAGpB,MAAM,CAACqB,GAAI,EAAxB;MAAMD,I;AAEN,eAAenB,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale } from \"react-datepicker\";\nimport ja from \"date-fns/locale/ja\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport styled from \"styled-components\";\n\nregisterLocale(\"ja\", ja);\n\nconst Calender: React.FC<CalenderProps> = (props) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [data, setData] = useState(\"sss\");\n  const handleChange = (date: Date) => {\n    setStartDate(date);\n  };\n\n  const data1 = {\n    a: \"aaaa\",\n    b: \"bbbb\",\n  };\n  interface dataType {\n    name: string;\n    type: string;\n    brand: string;\n  }\n\n  // const formedData = Object.entries(data1);\n\n  // formedData.map((datas) => {\n  //   datas.map((data) => {\n  //     props.dataType.map((dataType) => {\n  //       data === dataType.value && setData(data);\n  //     });\n  //   });\n  // });\n\n  interface idolData {\n    a: string;\n    b: string;\n  }\n\n  interface Soleil {\n    hosimiya: idolData;\n    kirija: idolData;\n    shibuki: idolData;\n  }\n\n  const idols: idolData = {\n    a: \"aaaa\",\n    b: \"bbbb\",\n  };\n\n  (Object.keys(idols) as (keyof Soleil)[]).map((key) => {\n    const data = idols[key]; // ðŸ‘ŒðŸ‘ŒðŸ‘Œ\n    console.log(data);\n  });\n\n  console.log(data);\n\n  return (\n    <React.Fragment>\n      <DatePicker\n        selected={startDate}\n        onChange={handleChange}\n        locale=\"ja\"\n        dateFormat=\"yyyy/MM/dd\"\n      />\n      <Text>dddddd</Text>\n    </React.Fragment>\n  );\n};\nexport type CalenderProps = {\n  dataType: {\n    value: string;\n    width: string;\n    text: string;\n  }[];\n};\n\nconst Text = styled.div``;\n\nexport default Calender;\n"]},"metadata":{},"sourceType":"module"}