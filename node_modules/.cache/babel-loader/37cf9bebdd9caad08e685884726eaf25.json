{"ast":null,"code":"var _jsxFileName = \"/Users/kurodakeisuke/Documents/work/src/react/type/src/components/pages/Page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Textarea from \"../common/TextArea\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport Calender from \"../common/Calender\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Page = () => {\n  _s();\n\n  //const 関数名 = useCallback(関数,[依存する配列])\n  //const 関数名 = useCallback(() => {},[])アロー関数の場合\n  //[]内を空欄にしたら初回のみ実行,[]内が関数または変数だったらその値が変わった時のみ\n  //onClickとかで呼ばれても、[]内が変わらなかったら反映されない\n  // const outputEvenNumber = useCallback(() => {\n  //   if (count % 2 === 0) {\n  //     console.log(\"useCallbackが実行されました\");\n  //   }\n  // }, [count]);\n  //useEffect(関数,[依存する配列])\n  //useEffect(() => {},[])アロー関数の場合\n  //毎回実行される,レンダリング後[]内の値が変わった時のみそれが反映される\n  //[]内を空欄にしたら初回のみ実行,[]内が関数または変数だったらその値が変わった時のみ\n  //第二引数が空欄の場合、毎回実行\n  // useEffect(() => {\n  //   outputEvenNumber();\n  //   console.log(\"useEffectが実行されました\");\n  // }, [outputEvenNumber]);\n  const [endDate, setEndDay] = useState(\"初期値\");\n  const [policyVinNo, setPolicyVinNo] = useState(\"初期値\");\n  const [countA, setCountA] = useState(0);\n  const [countB, setCountB] = useState(0);\n  useEffect(() => {\n    console.log(\"countAかわったよ\");\n  }, [countA]);\n  const countUp = useCallback((count, countType) => {\n    console.log(countB); //カウントアップ\n\n    if (countType === \"A\") {\n      setCountA(count.countA + 1);\n      console.log(\"countA\");\n      console.log(countA);\n    } else if (countType === \"B\") {\n      setCountB(count.countB + 1);\n      console.log(\"countB\");\n      console.log(countB);\n    }\n  }, [countA, countB]); // const clear = useCallback(() => {\n  //   console.log(\"clear\");\n  //   console.log(countA);\n  //   setStartDay(new Date());\n  //   setEndDay(\"\");\n  //   setPolicyVinNo(\"\");\n  //   setCountA(0);\n  // }, [startDate, endDate, policyVinNo, countA]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SerchLine, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: \"\\u306A\\u307E\\u3048\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        children: /*#__PURE__*/_jsxDEV(Calender, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \"\\u3055\\u3093\\u304B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \"\\u304B\\u307F\\u306A\\u308A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        width: \"160px\",\n        state: {\n          text: policyVinNo,\n          setText: setPolicyVinNo\n        },\n        margin: \"4px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        color: \"primary\",\n        \"aria-label\": \"outlined primary button group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"A:\", countA]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"B:\", countB]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      color: \"primary\",\n      \"aria-label\": \"outlined primary button group\",\n      children: [/*#__PURE__*/_jsxDEV(CountButton, {\n        onClick: () => {\n          setCountA(countA + 1);\n        },\n        children: \"count A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountButton, {\n        onClick: () => {\n          setCountB(countB + 1);\n        },\n        children: \"count B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Page, \"EyxPb4WTpXZSqdxkELgsBs9/WsM=\");\n\n_c = Page;\nconst CrearButton = styled(Button)`\n  /* background-color: green; */\n`;\nconst CountButton = styled(Button)`\n  color: red;\n  background-color: blue;\n`;\n_c2 = CountButton;\nconst Area = styled.div`\n  align-items: center;\n  text-align: center;\n  background-color: red;\n  width: 12px;\n`;\n_c3 = Area;\nconst SerchLine = styled.div`\n  display: flex;\n`;\n_c4 = SerchLine;\nconst Text = styled.div`\n  color: blue;\n  font-size: 40px;\n`;\n_c5 = Text;\nconst SampleStyle = styled.div`\n  background: red;\n  height: 200px;\n`;\nexport default Page;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"CountButton\");\n$RefreshReg$(_c3, \"Area\");\n$RefreshReg$(_c4, \"SerchLine\");\n$RefreshReg$(_c5, \"Text\");","map":{"version":3,"sources":["/Users/kurodakeisuke/Documents/work/src/react/type/src/components/pages/Page.tsx"],"names":["React","useCallback","useEffect","useState","styled","Textarea","ButtonGroup","Button","Calender","Page","endDate","setEndDay","policyVinNo","setPolicyVinNo","countA","setCountA","countB","setCountB","console","log","countUp","count","countType","text","setText","CrearButton","CountButton","Area","div","SerchLine","Text","SampleStyle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAC3B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBR,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,CAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,GAFQ,EAEN,CAACL,MAAD,CAFM,CAAT;AAIA,QAAMM,OAAO,GAAGnB,WAAW,CACzB,CAACoB,KAAD,EAAQC,SAAR,KAAsB;AACpBJ,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EADoB,CAGpB;;AACA,QAAIM,SAAS,KAAK,GAAlB,EAAuB;AACrBP,MAAAA,SAAS,CAACM,KAAK,CAACP,MAAN,GAAe,CAAhB,CAAT;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACD,KAJD,MAIO,IAAIQ,SAAS,KAAK,GAAlB,EAAuB;AAC5BL,MAAAA,SAAS,CAACI,KAAK,CAACL,MAAN,GAAe,CAAhB,CAAT;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD;AACF,GAdwB,EAezB,CAACF,MAAD,EAASE,MAAT,CAfyB,CAA3B,CAhC2B,CAkD3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAQE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,QAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,KAAK,EAAE;AAAEO,UAAAA,IAAI,EAAEX,WAAR;AAAqBY,UAAAA,OAAO,EAAEX;AAA9B,SAFT;AAGE,QAAA,MAAM,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,cATF,eAeE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAC,SAAnB;AAA6B,sBAAW;AAAxC;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA2BE,QAAC,IAAD;AAAA,uBAASC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF,eA4BE,QAAC,IAAD;AAAA,uBAASE,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF,eA6BE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAC,SAAnB;AAA6B,oBAAW,+BAAxC;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,OAAO,EAAE,MAAM;AACbD,UAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,WAAD;AACE,QAAA,OAAO,EAAE,MAAM;AACbG,UAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA,kBADF;AAkDD,CA7GD;;GAAMP,I;;KAAAA,I;AA8GN,MAAMgB,WAAW,GAAGrB,MAAM,CAACG,MAAD,CAAS;AACnC;AACA,CAFA;AAGA,MAAMmB,WAAW,GAAGtB,MAAM,CAACG,MAAD,CAAS;AACnC;AACA;AACA,CAHA;MAAMmB,W;AAKN,MAAMC,IAAI,GAAGvB,MAAM,CAACwB,GAAI;AACxB;AACA;AACA;AACA;AACA,CALA;MAAMD,I;AAON,MAAME,SAAS,GAAGzB,MAAM,CAACwB,GAAI;AAC7B;AACA,CAFA;MAAMC,S;AAGN,MAAMC,IAAI,GAAG1B,MAAM,CAACwB,GAAI;AACxB;AACA;AACA,CAHA;MAAME,I;AAIN,MAAMC,WAAW,GAAG3B,MAAM,CAACwB,GAAI;AAC/B;AACA;AACA,CAHA;AAKA,eAAenB,IAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Textarea from \"../common/TextArea\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport Calender from \"../common/Calender\";\n\nconst Page: React.FC = () => {\n  //const 関数名 = useCallback(関数,[依存する配列])\n  //const 関数名 = useCallback(() => {},[])アロー関数の場合\n  //[]内を空欄にしたら初回のみ実行,[]内が関数または変数だったらその値が変わった時のみ\n  //onClickとかで呼ばれても、[]内が変わらなかったら反映されない\n\n  // const outputEvenNumber = useCallback(() => {\n  //   if (count % 2 === 0) {\n  //     console.log(\"useCallbackが実行されました\");\n  //   }\n  // }, [count]);\n\n  //useEffect(関数,[依存する配列])\n  //useEffect(() => {},[])アロー関数の場合\n  //毎回実行される,レンダリング後[]内の値が変わった時のみそれが反映される\n  //[]内を空欄にしたら初回のみ実行,[]内が関数または変数だったらその値が変わった時のみ\n  //第二引数が空欄の場合、毎回実行\n  // useEffect(() => {\n  //   outputEvenNumber();\n  //   console.log(\"useEffectが実行されました\");\n  // }, [outputEvenNumber]);\n\n  const [endDate, setEndDay] = useState(\"初期値\");\n  const [policyVinNo, setPolicyVinNo] = useState(\"初期値\");\n\n  const [countA, setCountA] = useState(0);\n  const [countB, setCountB] = useState(0);\n\n  useEffect(() => {\n    console.log(\"countAかわったよ\");\n  }, [countA]);\n\n  const countUp = useCallback(\n    (count, countType) => {\n      console.log(countB);\n\n      //カウントアップ\n      if (countType === \"A\") {\n        setCountA(count.countA + 1);\n        console.log(\"countA\");\n        console.log(countA);\n      } else if (countType === \"B\") {\n        setCountB(count.countB + 1);\n        console.log(\"countB\");\n        console.log(countB);\n      }\n    },\n    [countA, countB]\n  );\n\n  // const clear = useCallback(() => {\n  //   console.log(\"clear\");\n  //   console.log(countA);\n  //   setStartDay(new Date());\n  //   setEndDay(\"\");\n  //   setPolicyVinNo(\"\");\n  //   setCountA(0);\n  // }, [startDate, endDate, policyVinNo, countA]);\n\n  return (\n    <>\n      <SerchLine>\n        <Text>なまえ</Text>\n        <Area>\n          <Calender />\n        </Area>\n\n        <Text>さんか</Text>\n\n        <Text>かみなり</Text>\n        <Textarea\n          width=\"160px\"\n          state={{ text: policyVinNo, setText: setPolicyVinNo }}\n          margin=\"4px\"\n        />\n        {/* <SearchButton onClick={search}>検索</SearchButton> */}\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n          {/* <CrearButton\n            color=\"primary\"\n            // disabled={true}\n            aria-label=\"outlined primary button group\"\n            onClick={clear}\n          >\n            削除\n          </CrearButton> */}\n        </ButtonGroup>\n      </SerchLine>\n      <Text>A:{countA}</Text>\n      <Text>B:{countB}</Text>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n        <CountButton\n          onClick={() => {\n            setCountA(countA + 1);\n          }}\n        >\n          count A\n        </CountButton>\n        <CountButton\n          onClick={() => {\n            setCountB(countB + 1);\n          }}\n        >\n          count B\n        </CountButton>\n      </ButtonGroup>\n      {/* <Detail />\n      <Summary /> */}\n    </>\n  );\n};\nconst CrearButton = styled(Button)`\n  /* background-color: green; */\n`;\nconst CountButton = styled(Button)`\n  color: red;\n  background-color: blue;\n`;\n\nconst Area = styled.div`\n  align-items: center;\n  text-align: center;\n  background-color: red;\n  width: 12px;\n`;\n\nconst SerchLine = styled.div`\n  display: flex;\n`;\nconst Text = styled.div`\n  color: blue;\n  font-size: 40px;\n`;\nconst SampleStyle = styled.div`\n  background: red;\n  height: 200px;\n`;\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}