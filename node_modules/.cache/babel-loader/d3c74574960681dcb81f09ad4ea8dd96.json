{"ast":null,"code":"var _jsxFileName = \"/Users/kurodakeisuke/Documents/work/yanagihara/src/components/commons/Table.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useTable } from \"react-table\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  Header: \"歌手\",\n  accessor: \"artist\"\n}, {\n  Header: \"曲\",\n  accessor: \"song\"\n}, {\n  Header: \"値段\",\n  accessor: \"cost\"\n}, {\n  Header: \"サンプル\",\n  accessor: \"sample\"\n}];\nconst data = [{\n  artist: \"乃木坂46\",\n  song: \"さよならの意味\",\n  cost: \"100000\",\n  sample: \"\"\n}, {\n  artist: \"乃木坂45\",\n  song: \"さよならの意味\",\n  cost: \"100000\",\n  sample: \"\"\n}, {\n  artist: \"乃木坂44\",\n  song: \"おはようの意味\",\n  cost: \"100000\",\n  sample: \"\"\n}, {\n  artist: \"乃木坂43\",\n  song: \"こんにちはの意味\",\n  cost: \"100000\",\n  sample: \"\"\n}, {\n  artist: \"乃木坂42\",\n  song: \"たかなわの意味\",\n  cost: \"100000\",\n  sample: \"\"\n}];\n\nfunction Table() {\n  _s();\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  console.log(getTableProps);\n  console.log(getTableBodyProps);\n  console.log(headerGroups);\n  console.log(rows);\n  console.log(prepareRow);\n  return /*#__PURE__*/_jsxDEV(StyledTable, { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(StyledTableHeader, {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(StyledTableColumn, { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTableBody, {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nconst StyledTable = styled.div`\n  width: 80%;\n  height: auto;\n  boder: gray 1px solid;\n`;\n_c2 = StyledTable;\nconst StyledTableHeader = styled.div`\n  width: 80%;\n  height: auto;\n  boder: gray 1px solid;\n`;\n_c3 = StyledTableHeader;\nconst StyledTableBody = styled.div`\n  width: 80%;\n  boder: gray 1px solid;\n`;\n_c4 = StyledTableBody;\nconst StyledTableColumn = styled.div`\n  width: 50px;\n  boder: gray 1px solid;\n`;\n_c5 = StyledTableColumn;\nexport default Table;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"StyledTable\");\n$RefreshReg$(_c3, \"StyledTableHeader\");\n$RefreshReg$(_c4, \"StyledTableBody\");\n$RefreshReg$(_c5, \"StyledTableColumn\");","map":{"version":3,"sources":["/Users/kurodakeisuke/Documents/work/yanagihara/src/components/commons/Table.tsx"],"names":["React","useTable","styled","columns","Header","accessor","data","artist","song","cost","sample","Table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","console","log","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","StyledTable","div","StyledTableHeader","StyledTableBody","StyledTableColumn"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport { useTable, Column } from \"react-table\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n\ninterface Data {\n  artist: string;\n  song: string;\n  cost: string;\n  sample: string;\n}\n\nconst columns: Column<Data>[] = [\n  {\n    Header: \"歌手\",\n    accessor: \"artist\",\n  },\n  {\n    Header: \"曲\",\n    accessor: \"song\",\n  },\n  {\n    Header: \"値段\",\n    accessor: \"cost\",\n  },\n  {\n    Header: \"サンプル\",\n    accessor: \"sample\",\n  },\n];\n\nconst data: Data[] = [\n  {\n    artist: \"乃木坂46\",\n    song: \"さよならの意味\",\n    cost: \"100000\",\n    sample: \"\",\n  },\n  {\n    artist: \"乃木坂45\",\n    song: \"さよならの意味\",\n    cost: \"100000\",\n    sample: \"\",\n  },\n  {\n    artist: \"乃木坂44\",\n    song: \"おはようの意味\",\n    cost: \"100000\",\n    sample: \"\",\n  },\n  {\n    artist: \"乃木坂43\",\n    song: \"こんにちはの意味\",\n    cost: \"100000\",\n    sample: \"\",\n  },\n  {\n    artist: \"乃木坂42\",\n    song: \"たかなわの意味\",\n    cost: \"100000\",\n    sample: \"\",\n  },\n];\n\nfunction Table() {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable<Data>({ columns, data });\n\n  console.log(getTableProps);\n  console.log(getTableBodyProps);\n  console.log(headerGroups);\n  console.log(rows);\n  console.log(prepareRow);\n\n  return (\n    <StyledTable {...getTableProps()}>\n      <StyledTableHeader>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <StyledTableColumn {...column.getHeaderProps()}>\n                {column.render(\"Header\")}\n              </StyledTableColumn>\n            ))}\n          </tr>\n        ))}\n      </StyledTableHeader>\n      <StyledTableBody>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </StyledTableBody>\n    </StyledTable>\n  );\n}\n\nconst StyledTable = styled.div`\n  width: 80%;\n  height: auto;\n  boder: gray 1px solid;\n`;\nconst StyledTableHeader = styled.div`\n  width: 80%;\n  height: auto;\n  boder: gray 1px solid;\n`;\nconst StyledTableBody = styled.div`\n  width: 80%;\n  boder: gray 1px solid;\n`;\nconst StyledTableColumn = styled.div`\n  width: 50px;\n  boder: gray 1px solid;\n`;\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}