{"ast":null,"code":"var _jsxFileName = \"/Users/kurodakeisuke/Documents/work/src/react/type/src/components/commons/Calender.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale } from \"react-datepicker\";\nimport ja from \"date-fns/locale/ja\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale(\"ja\", ja);\n\nconst Calender = props => {\n  _s();\n\n  const [startDate, setStartDate] = useState(new Date());\n\n  const handleChange = date => {\n    setStartDate(date);\n  };\n\n  const data = {\n    value: \"11111111\",\n    b: \"bbbb\"\n  };\n  const formedData = Object.entries(data); // formedData.map((data) => {\n  //   data === props.dataType.value && console.log(\"formedData\");\n  // });\n\n  const a = Object.keys(data);\n  a.map(key => {\n    console.log(\"ここ\");\n    props.dataType.map(type => {\n      key === type.value && console.log(\"それそれええええええ\");\n    });\n  }); // Object.keys(data).forEach(function (key) {\n  //   console.log(key + \"は\" + data[key] + \"と鳴いた！\");\n  // });\n\n  props.dataType.map(data => {\n    console.log(data.value);\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: startDate,\n      onChange: handleChange,\n      locale: \"ja\",\n      dateFormat: \"yyyy/MM/dd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calender, \"7VgZ1AaRN4UkTWnNfs7/CGxziHc=\");\n\n_c = Calender;\nconst Text = styled.div``;\nexport default Calender;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"sources":["/Users/kurodakeisuke/Documents/work/src/react/type/src/components/commons/Calender.tsx"],"names":["React","useState","DatePicker","registerLocale","ja","styled","Calender","props","startDate","setStartDate","Date","handleChange","date","data","value","b","formedData","Object","entries","a","keys","map","key","console","log","dataType","type","Text","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAO,4CAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEAF,cAAc,CAAC,IAAD,EAAOC,EAAP,CAAd;;AAEA,MAAME,QAAiC,GAAIC,KAAD,IAAW;AAAA;;AACnD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAIS,IAAJ,EAAD,CAA1C;;AACA,QAAMC,YAAY,GAAIC,IAAD,IAAgB;AACnCH,IAAAA,YAAY,CAACG,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMC,IAAI,GAAG;AACXC,IAAAA,KAAK,EAAE,UADI;AAEXC,IAAAA,CAAC,EAAE;AAFQ,GAAb;AAIA,QAAMC,UAAU,GAAGC,MAAM,CAACC,OAAP,CAAeL,IAAf,CAAnB,CAVmD,CAYnD;AACA;AACA;;AAEA,QAAMM,CAAC,GAAGF,MAAM,CAACG,IAAP,CAAYP,IAAZ,CAAV;AAEAM,EAAAA,CAAC,CAACE,GAAF,CAAOC,GAAD,IAAS;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAjB,IAAAA,KAAK,CAACkB,QAAN,CAAeJ,GAAf,CAAoBK,IAAD,IAAU;AAC3BJ,MAAAA,GAAG,KAAKI,IAAI,CAACZ,KAAb,IAAsBS,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAtB;AACD,KAFD;AAGD,GALD,EAlBmD,CAwBnD;AACA;AACA;;AAEAjB,EAAAA,KAAK,CAACkB,QAAN,CAAeJ,GAAf,CAAoBR,IAAD,IAAU;AAC3BU,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACC,KAAjB;AACD,GAFD;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAEN,SADZ;AAEE,MAAA,QAAQ,EAAEG,YAFZ;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,UAAU,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA1CD;;GAAML,Q;;KAAAA,Q;AAmDN,MAAMqB,IAAI,GAAGtB,MAAM,CAACuB,GAAI,EAAxB;AAEA,eAAetB,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale } from \"react-datepicker\";\nimport ja from \"date-fns/locale/ja\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport styled from \"styled-components\";\n\nregisterLocale(\"ja\", ja);\n\nconst Calender: React.FC<CalenderProps> = (props) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const handleChange = (date: Date) => {\n    setStartDate(date);\n  };\n\n  const data = {\n    value: \"11111111\",\n    b: \"bbbb\",\n  };\n  const formedData = Object.entries(data);\n\n  // formedData.map((data) => {\n  //   data === props.dataType.value && console.log(\"formedData\");\n  // });\n\n  const a = Object.keys(data);\n\n  a.map((key) => {\n    console.log(\"ここ\");\n    props.dataType.map((type) => {\n      key === type.value && console.log(\"それそれええええええ\");\n    });\n  });\n  // Object.keys(data).forEach(function (key) {\n  //   console.log(key + \"は\" + data[key] + \"と鳴いた！\");\n  // });\n\n  props.dataType.map((data) => {\n    console.log(data.value);\n  });\n\n  return (\n    <React.Fragment>\n      <DatePicker\n        selected={startDate}\n        onChange={handleChange}\n        locale=\"ja\"\n        dateFormat=\"yyyy/MM/dd\"\n      />\n    </React.Fragment>\n  );\n};\nexport type CalenderProps = {\n  dataType: {\n    value: string;\n    width: string;\n    text: string;\n  }[];\n};\n\nconst Text = styled.div``;\n\nexport default Calender;\n"]},"metadata":{},"sourceType":"module"}