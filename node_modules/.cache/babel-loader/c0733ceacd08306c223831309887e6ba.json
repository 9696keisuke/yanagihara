{"ast":null,"code":"var _jsxFileName = \"/Users/kurodakeisuke/Documents/work/src/react/type/src/components/commons/TextArea.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\n/**\n * テキストエリア\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Textarea = props => {\n  _s();\n\n  const onChange = useCallback(text => {\n    text = props.maxLength ? text.substr(0, props.maxLength) : text;\n    props.state.setText && props.state.setText(text);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(StyledTextarea, { ...props,\n    value: props.state.text,\n    onChange: event => {\n      onChange(event.target.value);\n      props.onChange && props.onChange(event);\n    },\n    type: props.isPassword ? \"password\" : \"text\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}; // eslint-disable-next-line @typescript-eslint/no-redeclare\n\n\n_s(Textarea, \"Iu2IEcVwb9j0g1NdDLJZGcgLzxw=\");\n\n_c = Textarea;\nexport const StyledTextarea = styled.input`\n  width: ${props => props.width ? props.width : \"160px\"};\n  height: 40px;\n  margin: ${props => props.margin ? props.margin : \"0\"};\n  padding: 0 12px;\n  color: black;\n  font-size: 16px;\n  line-height: 16px;\n  text-align: ${props => props.textAlign ? props.textAlign : \"left\"};\n  background: red;\n  border: 1px solid red;\n  border-radius: 4px;\n\n  :focus,\n  :active  {\n    border: 1px solid red;\n  }\n`;\n_c2 = StyledTextarea;\nexport default Textarea;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Textarea\");\n$RefreshReg$(_c2, \"StyledTextarea\");","map":{"version":3,"sources":["/Users/kurodakeisuke/Documents/work/src/react/type/src/components/commons/TextArea.tsx"],"names":["React","useCallback","styled","Textarea","props","onChange","text","maxLength","substr","state","setText","event","target","value","isPassword","StyledTextarea","input","width","margin","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA;AACA;AACA;;;;AACA,MAAMC,QAA4B,GAAIC,KAAD,IAAW;AAAA;;AAC9C,QAAMC,QAAQ,GAAGJ,WAAW,CACzBK,IAAD,IAAwB;AACtBA,IAAAA,IAAI,GAAGF,KAAK,CAACG,SAAN,GAAkBD,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeJ,KAAK,CAACG,SAArB,CAAlB,GAAoDD,IAA3D;AACAF,IAAAA,KAAK,CAACK,KAAN,CAAYC,OAAZ,IAAuBN,KAAK,CAACK,KAAN,CAAYC,OAAZ,CAAoBJ,IAApB,CAAvB;AACD,GAJyB,EAK1B,CAACF,KAAD,CAL0B,CAA5B;AAQA,sBACE,QAAC,cAAD,OACMA,KADN;AAEE,IAAA,KAAK,EAAEA,KAAK,CAACK,KAAN,CAAYH,IAFrB;AAGE,IAAA,QAAQ,EAAGK,KAAD,IAAsD;AAC9DN,MAAAA,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACAT,MAAAA,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeM,KAAf,CAAlB;AACD,KANH;AAOE,IAAA,IAAI,EAAEP,KAAK,CAACU,UAAN,GAAmB,UAAnB,GAAgC;AAPxC;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApBD,C,CAsBA;;;GAtBMX,Q;;KAAAA,Q;AAsCN,OAAO,MAAMY,cAAc,GAAGb,MAAM,CAACc,KAIlC;AACH,WAAYZ,KAAD,IAAoBA,KAAK,CAACa,KAAN,GAAcb,KAAK,CAACa,KAApB,GAA4B,OAAS;AACpE;AACA,YAAab,KAAD,IAAoBA,KAAK,CAACc,MAAN,GAAed,KAAK,CAACc,MAArB,GAA8B,GAAK;AACnE;AACA;AACA;AACA;AACA,gBAAiBd,KAAD,IACZA,KAAK,CAACe,SAAN,GAAkBf,KAAK,CAACe,SAAxB,GAAoC,MAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBO;MAAMJ,c;AAwBb,eAAeZ,QAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\n\n/**\n * テキストエリア\n */\nconst Textarea: React.FC<Textarea> = (props) => {\n  const onChange = useCallback(\n    (text: string): void => {\n      text = props.maxLength ? text.substr(0, props.maxLength) : text;\n      props.state.setText && props.state.setText(text);\n    },\n    [props]\n  );\n\n  return (\n    <StyledTextarea\n      {...props}\n      value={props.state.text}\n      onChange={(event: React.ChangeEvent<HTMLInputElement>): void => {\n        onChange(event.target.value);\n        props.onChange && props.onChange(event);\n      }}\n      type={props.isPassword ? \"password\" : \"text\"}\n    />\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type Textarea = {\n  state: {\n    text: string;\n    setText?: (text: string) => void;\n  };\n  placeholder?: string;\n  maxLength?: number;\n  isPassword?: boolean;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  width?: string;\n  margin?: string;\n  textAlign?: string;\n};\n\nexport const StyledTextarea = styled.input<{\n  width?: string;\n  margin?: string;\n  textAlign?: string;\n}>`\n  width: ${(props): string => (props.width ? props.width : \"160px\")};\n  height: 40px;\n  margin: ${(props): string => (props.margin ? props.margin : \"0\")};\n  padding: 0 12px;\n  color: black;\n  font-size: 16px;\n  line-height: 16px;\n  text-align: ${(props): string =>\n    props.textAlign ? props.textAlign : \"left\"};\n  background: red;\n  border: 1px solid red;\n  border-radius: 4px;\n\n  :focus,\n  :active  {\n    border: 1px solid red;\n  }\n`;\n\nexport default Textarea;\n"]},"metadata":{},"sourceType":"module"}