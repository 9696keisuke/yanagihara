{"ast":null,"code":"var _jsxFileName = \"/Users/kurodakeisuke/Documents/work/src/react/type/src/components/common/Calender.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport React from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calender = props => {\n  _s();\n\n  const initialDate = new Date();\n  const [startDate, setStartDate] = useState(initialDate);\n\n  const handleChange = date => {\n    setStartDate(date);\n  };\n\n  const parseAsMoment = dateTimeStr => {\n    return moment.utc(dateTimeStr, \"YYYY-MM-DDTHH:mm:00Z\", \"ja\").utcOffset(9);\n  };\n\n  const toUtcIso8601str = momentInstance => {\n    return momentInstance.clone().utc().format(\"YYYY-MM-DDTHH:mm:00Z\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: startDate,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calender, \"lls/cog25o9knCdcN+1RIqsy+xc=\");\n\n_c = Calender;\nexport default Calender;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"sources":["/Users/kurodakeisuke/Documents/work/src/react/type/src/components/common/Calender.tsx"],"names":["useState","DatePicker","React","Calender","props","initialDate","Date","startDate","setStartDate","handleChange","date","parseAsMoment","dateTimeStr","moment","utc","utcOffset","toUtcIso8601str","momentInstance","clone","format"],"mappings":";;;AAAA,SAAsBA,QAAtB,QAAsC,OAAtC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,4CAAP;;;AAEA,MAAMC,QAAiC,GAAIC,KAAD,IAAW;AAAA;;AACnD,QAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAACK,WAAD,CAA1C;;AACA,QAAMI,YAAY,GAAIC,IAAD,IAAe;AAClCF,IAAAA,YAAY,CAACE,IAAD,CAAZ;AACD,GAFD;;AAGA,QAAMC,aAAa,GAAIC,WAAD,IAAiB;AACrC,WAAOC,MAAM,CAACC,GAAP,CAAWF,WAAX,EAAwB,sBAAxB,EAAgD,IAAhD,EAAsDG,SAAtD,CAAgE,CAAhE,CAAP;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAIC,cAAD,IAAoB;AAC1C,WAAOA,cAAc,CAACC,KAAf,GAAuBJ,GAAvB,GAA6BK,MAA7B,CAAoC,sBAApC,CAAP;AACD,GAFD;;AAGA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEZ,SAAtB;AAAiC,MAAA,QAAQ,EAAEE;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlBD;;GAAMN,Q;;KAAAA,Q;AAqBN,eAAeA,QAAf","sourcesContent":["import { useCallback, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport React from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst Calender: React.FC<CalenderProps> = (props) => {\n  const initialDate = new Date();\n  const [startDate, setStartDate] = useState(initialDate);\n  const handleChange = (date: any) => {\n    setStartDate(date);\n  };\n  const parseAsMoment = (dateTimeStr) => {\n    return moment.utc(dateTimeStr, \"YYYY-MM-DDTHH:mm:00Z\", \"ja\").utcOffset(9);\n  };\n\n  const toUtcIso8601str = (momentInstance) => {\n    return momentInstance.clone().utc().format(\"YYYY-MM-DDTHH:mm:00Z\");\n  };\n  return (\n    <React.Fragment>\n      <DatePicker selected={startDate} onChange={handleChange} />;\n    </React.Fragment>\n  );\n};\nexport type CalenderProps = {};\n\nexport default Calender;\n"]},"metadata":{},"sourceType":"module"}