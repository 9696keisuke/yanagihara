{"ast":null,"code":"var _jsxFileName = \"/Users/kurodakeisuke/Documents/work/src/react/type/src/components/common/Calender.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [startDate, setStartDay] = useState(toUtcIso8601str(moment()));\n\nconst Calender = props => {\n  _s();\n\n  const clickDate = useCallback(date => {\n    props.setStartDay(date);\n  }, []);\n  const startDate = new Date();\n  console.log(startDate);\n\n  const parseAsMoment = dateTimeStr => {\n    return moment.utc(dateTimeStr, \"YYYY-MM-DDTHH:mm:00Z\", \"ja\").utcOffset(9);\n  };\n\n  const toUtcIso8601str = momentInstance => {\n    return momentInstance.clone().utc().format(\"YYYY-MM-DDTHH:mm:00Z\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: props.startDate,\n      onChange: clickDate,\n      customInput: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: parseAsMoment(startDate).format(\"YYYY/MM/DD\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calender, \"jmh0t8Wy2ZDvq4V8XGOwiSOTGUg=\");\n\n_c = Calender;\nexport default Calender;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"sources":["/Users/kurodakeisuke/Documents/work/src/react/type/src/components/common/Calender.tsx"],"names":["useCallback","DatePicker","React","startDate","setStartDay","useState","toUtcIso8601str","moment","Calender","props","clickDate","date","Date","console","log","parseAsMoment","dateTimeStr","utc","utcOffset","momentInstance","clone","format"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BC,QAAQ,CAACC,eAAe,CAACC,MAAM,EAAP,CAAhB,CAAzC;;AAEA,MAAMC,QAAiC,GAAIC,KAAD,IAAW;AAAA;;AACnD,QAAMC,SAAS,GAAGV,WAAW,CAAEW,IAAD,IAAU;AACtCF,IAAAA,KAAK,CAACL,WAAN,CAAkBO,IAAlB;AACD,GAF4B,EAE1B,EAF0B,CAA7B;AAIA,QAAMR,SAAS,GAAG,IAAIS,IAAJ,EAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;;AAEA,QAAMY,aAAa,GAAIC,WAAD,IAAiB;AACrC,WAAOT,MAAM,CAACU,GAAP,CAAWD,WAAX,EAAwB,sBAAxB,EAAgD,IAAhD,EAAsDE,SAAtD,CAAgE,CAAhE,CAAP;AACD,GAFD;;AAIA,QAAMZ,eAAe,GAAIa,cAAD,IAAoB;AAC1C,WAAOA,cAAc,CAACC,KAAf,GAAuBH,GAAvB,GAA6BI,MAA7B,CAAoC,sBAApC,CAAP;AACD,GAFD;;AAGA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAEZ,KAAK,CAACN,SADlB;AAEE,MAAA,QAAQ,EAAEO,SAFZ;AAGE,MAAA,WAAW,eACT;AAAA,kBAASK,aAAa,CAACZ,SAAD,CAAb,CAAyBkB,MAAzB,CAAgC,YAAhC;AAAT;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA3BD;;GAAMb,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import { useCallback } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport React from \"react\";\nconst [startDate, setStartDay] = useState(toUtcIso8601str(moment()));\n\nconst Calender: React.FC<CalenderProps> = (props) => {\n  const clickDate = useCallback((date) => {\n    props.setStartDay(date);\n  }, []);\n\n  const startDate = new Date();\n  console.log(startDate);\n\n  const parseAsMoment = (dateTimeStr) => {\n    return moment.utc(dateTimeStr, \"YYYY-MM-DDTHH:mm:00Z\", \"ja\").utcOffset(9);\n  };\n\n  const toUtcIso8601str = (momentInstance) => {\n    return momentInstance.clone().utc().format(\"YYYY-MM-DDTHH:mm:00Z\");\n  };\n  return (\n    <React.Fragment>\n      <DatePicker\n        selected={props.startDate}\n        onChange={clickDate}\n        customInput={\n          <button>{parseAsMoment(startDate).format(\"YYYY/MM/DD\")}</button>\n        }\n      />\n      ;\n    </React.Fragment>\n  );\n};\nexport type CalenderProps = {};\n\nexport default Calender;\n"]},"metadata":{},"sourceType":"module"}