{"ast":null,"code":"var _jsxFileName = \"/Users/kurodakeisuke/Documents/work/yanagihara/src/components/commons/Table.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  Header: \"歌手\",\n  accessor: \"artist\"\n}, {\n  Header: \"曲\",\n  accessor: \"song\"\n}, {\n  Header: \"値段\",\n  accessor: \"cost\"\n}, {\n  Header: \"サンプル\",\n  accessor: \"sample\"\n}];\nconst data = [{\n  artist: \"乃木坂46\",\n  song: \"さよならの意味\",\n  cost: \"100000\",\n  sample: \"\"\n}, {\n  artist: \"乃木坂45\",\n  song: \"さよならの意味\",\n  cost: \"100000\",\n  sample: \"\"\n}, {\n  artist: \"乃木坂44\",\n  song: \"おはようの意味\",\n  cost: \"100000\",\n  sample: \"\"\n}, {\n  artist: \"乃木坂43\",\n  song: \"こんにちはの意味\",\n  cost: \"100000\",\n  sample: \"\"\n}, {\n  artist: \"乃木坂42\",\n  song: \"たかなわの意味\",\n  cost: \"100000\",\n  sample: \"\"\n}];\n\nfunction Table() {\n  _s();\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  console.log(getTableProps);\n  console.log(getTableBodyProps);\n  console.log(headerGroups);\n  console.log(rows);\n  console.log(prepareRow);\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/kurodakeisuke/Documents/work/yanagihara/src/components/commons/Table.tsx"],"names":["React","useTable","columns","Header","accessor","data","artist","song","cost","sample","Table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","console","log","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport { useTable, Column } from \"react-table\";\n\ninterface Data {\n  artist: string;\n  song: string;\n  cost: string;\n  sample: string;\n}\n\nconst columns: Column<Data>[] = [\n  {\n    Header: \"歌手\",\n    accessor: \"artist\",\n  },\n  {\n    Header: \"曲\",\n    accessor: \"song\",\n  },\n  {\n    Header: \"値段\",\n    accessor: \"cost\",\n  },\n  {\n    Header: \"サンプル\",\n    accessor: \"sample\",\n  },\n];\n\nconst data: Data[] = [\n  {\n    artist: \"乃木坂46\",\n    song: \"さよならの意味\",\n    cost: \"100000\",\n    sample: \"\",\n  },\n  {\n    artist: \"乃木坂45\",\n    song: \"さよならの意味\",\n    cost: \"100000\",\n    sample: \"\",\n  },\n  {\n    artist: \"乃木坂44\",\n    song: \"おはようの意味\",\n    cost: \"100000\",\n    sample: \"\",\n  },\n  {\n    artist: \"乃木坂43\",\n    song: \"こんにちはの意味\",\n    cost: \"100000\",\n    sample: \"\",\n  },\n  {\n    artist: \"乃木坂42\",\n    song: \"たかなわの意味\",\n    cost: \"100000\",\n    sample: \"\",\n  },\n];\n\nfunction Table() {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable<Data>({ columns, data });\n\n  console.log(getTableProps);\n  console.log(getTableBodyProps);\n  console.log(headerGroups);\n  console.log(rows);\n  console.log(prepareRow);\n\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}